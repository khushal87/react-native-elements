(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{226:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return b}));var i=n(3),a=n(7),r=(n(0),n(291)),l={title:"Version 2.3 Upgrade Guide",author:"Core Team",authorURL:"https://opencollective.com/react-native-elements#team"},o={permalink:"/blog/2020/08/10/2.3-upgrade-guide",source:"@site/blog/2020-08-10-2.3-upgrade-guide.md",description:"There have been a lot of changes and improvements coming through the pipeline recently with react-native-elements. So in preparing for a version 3, there are some planned deprecations that will be added into version 2.3 and then removed in version 3.",date:"2020-08-10T00:00:00.000Z",tags:[],title:"Version 2.3 Upgrade Guide",readingTime:3.015,truncated:!1,nextItem:{title:"React Native Elements 1.0",permalink:"/blog/2019/01/27/1.0-release"}},p=[{value:"Avatar",id:"avatar",children:[]},{value:"ListItem",id:"listitem",children:[{value:"leftElement, leftIcon, leftAvatar, rightElement, rightIcon, rightAvatar",id:"leftelement-lefticon-leftavatar-rightelement-righticon-rightavatar",children:[]},{value:"title, titleStyle, titleProps, subtitle, subtitleProps, subtitleStyle",id:"title-titlestyle-titleprops-subtitle-subtitleprops-subtitlestyle",children:[]},{value:"contentContainerStyle, rightContentContainerStyle",id:"contentcontainerstyle-rightcontentcontainerstyle",children:[]},{value:"rightTitle, rightTitleStyle, rightTitleProps, rightSubtitle, rightSubtitleStyle, rightSubtitleProps",id:"righttitle-righttitlestyle-righttitleprops-rightsubtitle-rightsubtitlestyle-rightsubtitleprops",children:[]},{value:"input, buttonGroup, switchProps, checkBox, badge, chevron, checkmark",id:"input-buttongroup-switchprops-checkbox-badge-chevron-checkmark",children:[]}]},{value:"Card",id:"card",children:[{value:"title, titleStyle, titleNumberOfLines",id:"title-titlestyle-titlenumberoflines",children:[]},{value:"dividerStyle",id:"dividerstyle",children:[]},{value:"image, imageStyle, imageProps, imageWrapperStyle",id:"image-imagestyle-imageprops-imagewrapperstyle",children:[]},{value:"featuredTitle, featuredTitleStyle, featuredSubtitle, featuredSubtitleStyle",id:"featuredtitle-featuredtitlestyle-featuredsubtitle-featuredsubtitlestyle",children:[]}]},{value:"BottomSheet",id:"bottomsheet",children:[]},{value:"Dark Mode",id:"dark-mode",children:[]}],c={rightToc:p};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(i.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"There have been a lot of changes and improvements coming through the pipeline recently with ",Object(r.b)("inlineCode",{parentName:"p"},"react-native-elements"),". So in preparing for a version 3, there are some planned deprecations that will be added into version 2.3 and then removed in version 3."),Object(r.b)("p",null,"The reason for these changes is that ",Object(r.b)("inlineCode",{parentName:"p"},"react-native-elements")," regularly gets requests for new features and enhancements quite frequently. The fast and easy method of adding these new features is usually to add another prop into the component that then injects some change into a child component. Unfortunately, this ends up leading to the components having a lot of props, lots of conditional code, and additional code complexity. The solution going forward and into version 3 will be to break down large components into smaller pieces so that it is easier to inject your own code without having to wait for an additional prop to be added."),Object(r.b)("p",null,"As we continue to build up to version 3, this post will continue to be updated with new step-by-step directions on how to upgrade your code to work around these changes. The RNE team thanks you for your patience, and we hope that you see the value in the upcoming changes."),Object(r.b)("h2",{id:"avatar"},"Avatar"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"accessory"),", ",Object(r.b)("inlineCode",{parentName:"p"},"showAccessory"),", and ",Object(r.b)("inlineCode",{parentName:"p"},"accessoryProps")," are all being dprecated. There is now a child component ",Object(r.b)("inlineCode",{parentName:"p"},"Avatar.Accessory")," that you insert as a child component instead."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),"<Avatar>\n  <Avatar.Accessory {...accessoryProps} />\n</Avatar>\n")),Object(r.b)("h2",{id:"listitem"},"ListItem"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"ListItem")," has a large number of deprecated props. ",Object(r.b)("inlineCode",{parentName:"p"},"ListItem")," has been somewhat of a kitchen sink. All the props can be replaced by inserting them as children in the order of left to right as they appear on the screen."),Object(r.b)("h3",{id:"leftelement-lefticon-leftavatar-rightelement-righticon-rightavatar"},"leftElement, leftIcon, leftAvatar, rightElement, rightIcon, rightAvatar"),Object(r.b)("p",null,"These can be replaced by using ",Object(r.b)("inlineCode",{parentName:"p"},"Text"),", ",Object(r.b)("inlineCode",{parentName:"p"},"Icon"),", and ",Object(r.b)("inlineCode",{parentName:"p"},"Avatar")," components respectively."),Object(r.b)("h3",{id:"title-titlestyle-titleprops-subtitle-subtitleprops-subtitlestyle"},"title, titleStyle, titleProps, subtitle, subtitleProps, subtitleStyle"),Object(r.b)("p",null,"These props can be replaced by ",Object(r.b)("inlineCode",{parentName:"p"},"ListItem.Content"),", ",Object(r.b)("inlineCode",{parentName:"p"},"ListItem.Title")," and ",Object(r.b)("inlineCode",{parentName:"p"},"ListItem.Subtitle")),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),"<ListItem>\n  <ListItem.Content>\n    <ListItem.Title style={titleStyle} {...titleProps}>\n      {title}\n    </ListItem.Title>\n  </ListItem.Content>\n</ListItem>\n")),Object(r.b)("h3",{id:"contentcontainerstyle-rightcontentcontainerstyle"},"contentContainerStyle, rightContentContainerStyle"),Object(r.b)("p",null,"These props should be placed in the ",Object(r.b)("inlineCode",{parentName:"p"},"style")," prop of ",Object(r.b)("inlineCode",{parentName:"p"},"ListItem.Content"),"."),Object(r.b)("h3",{id:"righttitle-righttitlestyle-righttitleprops-rightsubtitle-rightsubtitlestyle-rightsubtitleprops"},"rightTitle, rightTitleStyle, rightTitleProps, rightSubtitle, rightSubtitleStyle, rightSubtitleProps"),Object(r.b)("p",null,"These props also use ",Object(r.b)("inlineCode",{parentName:"p"},"ListItem.Content"),", ",Object(r.b)("inlineCode",{parentName:"p"},"ListItem.Title"),", and ",Object(r.b)("inlineCode",{parentName:"p"},"ListItem.Subtitle"),". Simply add the prop ",Object(r.b)("inlineCode",{parentName:"p"},"right")," to each one."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),"<ListItem>\n  <ListItem.Content right>\n    <ListItem.Title right style={titleStyle} {...titleProps}>\n      {title}\n    </ListItem.Title>\n  </ListItem.Content>\n</ListItem>\n")),Object(r.b)("h3",{id:"input-buttongroup-switchprops-checkbox-badge-chevron-checkmark"},"input, buttonGroup, switchProps, checkBox, badge, chevron, checkmark"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"input")," prop can be replaced with ",Object(r.b)("inlineCode",{parentName:"p"},"ListItem.Input"),"."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"buttonGroup")," prop can be replaced with ",Object(r.b)("inlineCode",{parentName:"p"},"ListItem.ButtonGroup"),"."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"switchProps")," prop can be replaced with ",Object(r.b)("inlineCode",{parentName:"p"},"react-native"),"'s ",Object(r.b)("inlineCode",{parentName:"p"},"Switch"),"."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"checkBox")," prop can be replaced with ",Object(r.b)("inlineCode",{parentName:"p"},"ListItem.CheckBox"),"."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"badge")," prop can be replaced with ",Object(r.b)("inlineCode",{parentName:"p"},"Badge"),"."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"chevron")," prop can be replaced with ",Object(r.b)("inlineCode",{parentName:"p"},"ListItem.Chevron"),"."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"checkmark")," prop can be replaced with :"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),'<Icon name="check" size={20} />\n')),Object(r.b)("h2",{id:"card"},"Card"),Object(r.b)("p",null,"For ",Object(r.b)("inlineCode",{parentName:"p"},"Card")," the following props have all been deprecated: ",Object(r.b)("inlineCode",{parentName:"p"},"title"),", ",Object(r.b)("inlineCode",{parentName:"p"},"titleStyle"),", ",Object(r.b)("inlineCode",{parentName:"p"},"titleNumberOfLines"),", ",Object(r.b)("inlineCode",{parentName:"p"},"dividerStyle"),", ",Object(r.b)("inlineCode",{parentName:"p"},"image"),", ",Object(r.b)("inlineCode",{parentName:"p"},"imageStyle"),", ",Object(r.b)("inlineCode",{parentName:"p"},"imageProps"),", ",Object(r.b)("inlineCode",{parentName:"p"},"imageWrapperStyle"),", ",Object(r.b)("inlineCode",{parentName:"p"},"featuredTitle"),", ",Object(r.b)("inlineCode",{parentName:"p"},"featuredTitleStyle"),", ",Object(r.b)("inlineCode",{parentName:"p"},"featuredSubtitle"),", ",Object(r.b)("inlineCode",{parentName:"p"},"featuredSubtitleStyle")),Object(r.b)("h3",{id:"title-titlestyle-titlenumberoflines"},"title, titleStyle, titleNumberOfLines"),Object(r.b)("p",null,"Move these props into ",Object(r.b)("inlineCode",{parentName:"p"},"Card.Title")),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),"<Card>\n  <Card.Title style={titleStyle} numberOfLines={titleNumberOfLines}>\n    {title}\n  </Card.Title>\n</Card>\n")),Object(r.b)("h3",{id:"dividerstyle"},"dividerStyle"),Object(r.b)("p",null,"The divider and the ",Object(r.b)("inlineCode",{parentName:"p"},"dividerStyle")," itself were moved into ",Object(r.b)("inlineCode",{parentName:"p"},"Card.Divider")),Object(r.b)("h3",{id:"image-imagestyle-imageprops-imagewrapperstyle"},"image, imageStyle, imageProps, imageWrapperStyle"),Object(r.b)("p",null,"These can be replaced with ",Object(r.b)("inlineCode",{parentName:"p"},"Card.Image")," which accepts all ",Object(r.b)("inlineCode",{parentName:"p"},"Image")," props. ",Object(r.b)("inlineCode",{parentName:"p"},"imageWrapperStyle")," can be attached to a ",Object(r.b)("inlineCode",{parentName:"p"},"View")," that wraps the ",Object(r.b)("inlineCode",{parentName:"p"},"Image")),Object(r.b)("h3",{id:"featuredtitle-featuredtitlestyle-featuredsubtitle-featuredsubtitlestyle"},"featuredTitle, featuredTitleStyle, featuredSubtitle, featuredSubtitleStyle"),Object(r.b)("p",null,"These were both replaced with ",Object(r.b)("inlineCode",{parentName:"p"},"Card.FeaturedTitle")," and ",Object(r.b)("inlineCode",{parentName:"p"},"Card.FeaturedSubtitle")),Object(r.b)("h2",{id:"bottomsheet"},"BottomSheet"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"BottomSheet")," was added in version 2.2, and it was noted that it had some strict dependencies that weren't so well liked. So ",Object(r.b)("inlineCode",{parentName:"p"},"BottomSheet")," has changed completely and it is encouraged that you checkout the docs page on it again."),Object(r.b)("h2",{id:"dark-mode"},"Dark Mode"),Object(r.b)("p",null,"Make sure to checkout the customization page. We added a dark mode configuration to the ",Object(r.b)("inlineCode",{parentName:"p"},"ThemeProvider")," that should help out in bootstraping your app's dark mode."))}b.isMDXComponent=!0},291:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return h}));var i=n(0),a=n.n(i);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),b=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=b(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=b(n),u=i,h=d["".concat(l,".").concat(u)]||d[u]||s[u]||r;return n?a.a.createElement(h,o(o({ref:t},c),{},{components:n})):a.a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<r;c++)l[c]=n[c];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);